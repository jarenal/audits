security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
      App\Entity\User:
        algorithm: bcrypt
    providers:
        database_provider:
            entity:
                class: App\Entity\User
        # api_key_user_provider:
        #     id: App\Security\ApiKeyUserProvider
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: ~
            pattern: ^/
            form_login:
                login_path: login
                check_path: login
                default_target_path: dashboard
                always_use_default_target_path: true
            provider: database_provider
            logout:
                path: /logout
                target: /

            # api
            #stateless: true
            #simple_preauth:
            #   authenticator: App\Security\ApiKeyAuthenticator
            #provider: api_key_user_provider
            # api end

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }

